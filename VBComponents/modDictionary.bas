Attribute VB_Name = "modDictionary"
Option Explicit
Public objTemplates As Object

Private Sub testDictionary()
    
    Call InitializeDictionary
    
    objTemplates.Add "diabetes", "a1c is above goal"
    objTemplates.Add "cholesterol", "ldl is above goal"
    objTemplates.Add "hypertension", "bp is above goal"
    
    ' Print all templates in immediate window
    Dim shortcut As Variant
    For Each shortcut In objTemplates.keys
        'Debug.Print shortcut, objTemplates(shortcut)
    Next shortcut
    
End Sub
Private Sub InitializeDictionary()
    ' Create dictionary object (erases current dictionary)
    Set objTemplates = CreateObject("Scripting.Dictionary")
    objTemplates.CompareMode = vbTextCompare ' Not case-sensitive
End Sub

'****************modDictionary SUBS/FUNCTIONS****************

Public Function DictionaryExists() As Boolean
    If objTemplates Is Nothing Then
        DictionaryExists = False
    Else
        DictionaryExists = True
    End If
End Function
Public Sub OpenEditor()
    If objTemplates Is Nothing Then
        Call InitializeDictionary
    End If
    formEditor.Show
End Sub
Public Sub OpenCSV(strPath As String)
    Dim varTemplate As Variant
    Dim i As Long
    Dim LineFromFile As String
    Dim LineItems() As String
    
    On Error GoTo ErrHandler
    
    Call InitializeDictionary
    
    ' Validate file path
    If Len(strPath) = 0 Then
        Exit Sub
    ElseIf modOpenDialog.FileExists(strPath) = False Then
        MsgBox "Invalid file path.", vbExclamation
        Exit Sub
    End If
    
    ' Open and loop through csv file
    Open strPath For Input As #1
    Do Until EOF(1)
        Line Input #1, LineFromFile
        LineItems = Split(LineFromFile, ",")
        objTemplates.Add LineItems(0), LineItems(1)
        'Debug.Print LineItems(0), LineItems(1)
        i = i + 1
    Loop
    Close #1
    
    MsgBox Dir(strPath) & " loaded successfully.", vbInformation
    Exit Sub

ErrHandler:
    Select Case Err.Number
        Case 53 ' CSV file doesn't exist
            MsgBox Err.Description, vbExclamation
        Case Else
            MsgBox "Run-time error '" & Err.Number & "':" & _
                vbNewLine & Err.Description, vbCritical
    End Select
End Sub
Public Sub SaveAsCSV(strPath As String)
    Dim varTemplate As Variant
    Dim i As Long
    
    On Error GoTo ErrHandler
    
    ' Validate file path
    If Len(strPath) = 0 Then
        Exit Sub
    End If
    
    ' Check if dictionary is empty
    If objTemplates.Count = 0 Then
        MsgBox "Template dictionary is empty.", vbExclamation
        Exit Sub
    End If
    
    ' Save each dictionary item to csv file
    Call RemoveNull
    Open strPath For Output As #2
        For Each varTemplate In objTemplates.keys
            Print #2, varTemplate & "," & objTemplates(varTemplate)
            i = i + 1
        Next varTemplate
    Close #2
    
    MsgBox Dir(strPath) & " saved successfully.", vbInformation
    Exit Sub
        
ErrHandler:
    Select Case Err.Number
        Case 91
            MsgBox "Template dictionary does not exist.", vbExclamation
        Case Else
            MsgBox "Run-time error '" & Err.Number & "':" & _
                vbNewLine & Err.Description, vbCritical
    End Select
End Sub


'****************modKeyBind SUBS/FUNCTIONS****************

Public Function GetTemplate(ByVal strKey As String) As String
    If objTemplates.Exists(strKey) = True Then
        GetTemplate = objTemplates(strKey)
    Else
        GetTemplate = ""
    End If
End Function

'****************USERFORM SUBS/FUNCTIONS****************

Public Sub UnsavedTemplate(ByVal strKey As String, _
    ByVal strTemplate As String)
    
    ' Check if key is null or if template is different
    If Len(strKey) > 0 And Len(strTemplate) > 0 And _
        objTemplates(strKey) <> strTemplate Then
        ' Ask user if they want to save changes
        If MsgBox("Do you want to save changes you made to """ & _
        strKey & """?", vbYesNo + vbExclamation) = vbYes Then
            objTemplates(strKey) = strTemplate
        End If
    End If
    Call RemoveNull
End Sub
Public Function SaveTemplate(ByVal strKey As String, _
    ByVal strTemplate As String) As Boolean
    If objTemplates.Exists(strKey) = True Then
        SaveTemplate = True
    Else
        SaveTemplate = False
    End If
    objTemplates(strKey) = strTemplate
    Call RemoveNull
End Function
Public Sub RemoveTemplate(ByVal strKey As String)
    objTemplates.Remove strKey
    Call RemoveNull
End Sub
Private Sub RemoveNull()
    ' Remove blank keys if generated by userform
    If objTemplates.Exists("") = True Then
        objTemplates.Remove ""
    End If
End Sub
